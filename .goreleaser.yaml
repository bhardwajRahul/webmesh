project_name: webmesh

before:
  hooks:
    - go mod tidy
    - go mod download -x
    - go generate ./...

builds:
  - id: node
    main: cmd/webmesh-node/main.go
    binary: webmesh-node
    env:
      - CGO_ENABLED=0
    tags:
      - osusergo
      - netgo
    flags:
      - -trimpath
    ldflags:
      - -s 
      - -w 
      - -X github.com/webmeshproj/webmesh/pkg/version.Version={{.Version}}
      - -X github.com/webmeshproj/webmesh/pkg/version.GitCommit={{.Commit}}
      - -X github.com/webmeshproj/webmesh/pkg/version.BuildDate={{.Date}}
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
      - arm
      - '386'
      - ppc64le
      - s390x
      - mips64le
      - mips64
      - mipsle
      - mips

  - id: wmctl
    main: cmd/wmctl/main.go
    binary: wmctl
    env:
      - CGO_ENABLED=0
    tags:
      - osusergo
      - netgo
    flags:
      - -trimpath
    ldflags:
      - -s 
      - -w 
      - -X github.com/webmeshproj/webmesh/pkg/version.Version={{.Version}}
      - -X github.com/webmeshproj/webmesh/pkg/version.GitCommit={{.Commit}}
      - -X github.com/webmeshproj/webmesh/pkg/version.BuildDate={{.Date}}
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
      - arm
      - '386'
      - ppc64le
      - s390x
      - mips64le
      - mips64
      - mipsle
      - mips

  - id: webmeshd
    main: ./cmd/webmeshd
    binary: webmeshd
    env:
      - CGO_ENABLED=0
    tags:
      - osusergo
      - netgo
    flags:
      - -trimpath
    ldflags:
      - -s 
      - -w 
      - -X github.com/webmeshproj/webmesh/pkg/version.Version={{.Version}}
      - -X github.com/webmeshproj/webmesh/pkg/version.GitCommit={{.Commit}}
      - -X github.com/webmeshproj/webmesh/pkg/version.BuildDate={{.Date}}
    goos:
      - windows
      - darwin
    goarch:
      - amd64
      - arm64

upx:
  - ids: [node]
    enabled: true
    compress: best
    lzma: true
    goos: [linux]
    goarch: [amd64, arm64, arm, '386', ppc64le, mipsle, mips]

checksum:
  name_template: 'checksums.txt'

snapshot:
  name_template: "{{ incpatch .Version }}-next"

archives:
  - id: webmesh
    format: tar.gz
    builds:
      - node
      - wmctl
    files:
      - src: LICENSE
      - src: contrib/systemd/webmeshd.service
        strip_parent: false
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip

nfpms:
  - id: webmesh
    maintainer: Avi Zimmerman <avi.zimmerman@gmail.com>
    description: Webmesh is a service mesh for the web
    homepage: https://webmeshproj.github.io
    license: Apache 2.0
    contents:
      - src: LICENSE
        dst: /usr/share/licenses/webmesh/LICENSE
      - src: contrib/systemd/webmeshd.service
        dst: /usr/lib/systemd/system/webmeshd.service
    builds:
      - node
      - wmctl
    formats:
      - deb
      - rpm
      - apk
    recommends:
      - wireguard-tools
    overrides:
      rpm:
        dependencies:
          - elrepo-release
          - epel-release
          - kmod-wireguard

  - id: webmesh-arch
    maintainer: Avi Zimmerman <avi.zimmerman@gmail.com>
    description: Webmesh is a service mesh for the web
    homepage: https://webmeshproj.github.io
    license: Apache 2.0
    contents:
      - src: LICENSE
        dst: /usr/share/licenses/webmesh/LICENSE
      - src: contrib/systemd/webmeshd.service
        dst: /usr/lib/systemd/system/webmeshd.service
    builds:
      - node
      - wmctl
    formats:
      - archlinux
    recommends:
      - wireguard-tools
    conflicts:
      - webmesh-git
      - webmesh-bin
    archlinux:
      packager: Avi Zimmerman <avi.zimmerman@gmail.com>
      pkgbase: webmesh

brews:
  - ids: [webmesh]
    folder: Formula
    homepage: https://webmeshproj.github.io
    description: Webmesh is a service mesh for the web
    license: Apache 2.0
    url_template: "https://github.com/webmeshproj/webmesh/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    skip_upload: auto
    repository:
      owner: webmeshproj
      name: homebrew-repo
      token: "{{ .Env.HOMEBREW_TAP_TOKEN }}"
    commit_author:
      name: Avi Zimmerman
      email: avi.zimmerman@gmail.com
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    install: |
      bin.install "webmesh-node"
      bin.install "wmctl"
      system "mkdir -p #{bash_completion} #{zsh_completion} #{fish_completion}"
      system "#{bin}/wmctl completion bash > #{bash_completion}/wmctl"
      system "#{bin}/wmctl completion zsh > #{zsh_completion}/_wmctl"
      system "#{bin}/wmctl completion fish > #{fish_completion}/wmctl.fish"
    test: |
      system "#{bin}/webmesh-node --version"
      system "#{bin}/wmctl --version"
    caveats: |
      Completions have been installed to:
        #{bash_completion}/wmctl
        #{zsh_completion}/_wmctl
        #{fish_completion}/wmctl.fish

      To enable bash completion, add the following to your ~/.bashrc or ~/.bash_profile:
        source $(brew --prefix)/etc/bash_completion
        source #{bash_completion}/wmctl

      To enable zsh completion, add the following to your ~/.zshrc:
        fpath=(#{zsh_completion} $fpath)
        autoload -Uz compinit && compinit

      To enable fish completion, add the following to your ~/.config/fish/config.fish:
        source #{fish_completion}/wmctl.fish

signs:
  - id: checksum
    cmd: cosign
    args:
      - "sign-blob"
      - "--yes"
      - "--oidc-issuer=https://token.actions.githubusercontent.com"
      - "--output-signature=${signature}"
      - "--output-certificate=${signature}.cert"
      - "${artifact}"
    artifacts: checksum
    env:
      - COSIGN_EXPERIMENTAL=1

  - id: packages
    cmd: gpg2
    stdin: '{{ .Env.GPG_PASSWORD }}'
    args:
      - "--local-user={{ .Env.GPG_KEY_ID }}"
      - "--passphrase-file=/dev/stdin"
      - "--pinentry=loopback"
      - "--output=${signature}"
      - "--detach-sign"
      - "${artifact}"
    artifacts: package
    ids:
      - webmesh-arch

changelog:
  sort: asc
  filters:
    exclude:
      - '^examples:'

release:
  github:
    owner: webmeshproj
    name: webmesh
  ids:
    - webmesh
    - webmesh-arch
  extra_files:
    - glob: dist/*.sig
    - glob: dist/*.sig.cert

# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
